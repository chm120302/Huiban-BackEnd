<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.huibanbackend.mapper.UserMapper">

    <resultMap id="userMap" type="user">
        <id property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="imageUrl" column="image_url"/>
        <result property="userName" column="user_name"/>
        <result property="institution" column="instituton"/>
        <result property="password" column="password"/>
        <!-- 配置关注会议的映射集合-->
        <collection property="followConferences" ofType="conference">
            <id property="id" column="id"/>
            <result property="conferenceId" column="conference_id"/>
            <result property="title" column="title"/>
            <result property="fullTitle" column="full_title"/>
            <result property="ccfRank" column="ccf_rank"/>
            <result property="sub" column="sub"/>
            <result property="year" column="year"/>
            <result property="dblpLink" column="dblp_link"/>
            <result property="mainpageLink" column="mainpage_link"/>
            <result property="place" column="place"/>
            <result property="abstractDeadline" column="abstract_deadline"/>
            <result property="paperDeadline" column="paper_deadline"/>
            <result property="startTime" column="start_time"/>
            <result property="followNum" column="follow_num"/>
            <result property="acceptedRate" column="accepted_rate"/>
            <result property="sessionNum" column="session_num"/>
            <result property="topicDetails" column="topic_details"/>
            <result property="isPostponed" column="is_postponed"/>
        </collection>

        <!-- 配置关注期刊的映射集合-->
        <collection property="followJournals" ofType="journal">
            <id property="id" column="id"/>
            <result property="journalId" column="journal_id"/>
            <result property="ccfRank" column="ccf_rank"/>
            <result property="sub" column="sub"/>
            <result property="dblpLink" column="dblp_link"/>
            <result property="mainpageLink" column="mainpage_link"/>
            <result property="followNum" column="follow_num"/>
            <result property="acceptedRate" column="accepted_rate"/>
            <result property="sessionNum" column="session_num"/>
            <result property="topicDetails" column="topic_details"/>
            <result property="isPostponed" column="is_postponed"/>
        </collection>
    </resultMap>

    <sql id="getAllIncludeFollow">
        select u.*, c.*, j.*
        from user u
        left join followlist ft on u.email = ft.email
        left join conference c on ft.academic_id = c.conference_id
        left join journal j on ft.academic_id = j.journal_id
    </sql>

    <!--
    查询所有用户的信息包括收藏列表
    List<User> getAllInfo();
    -->
    <select id="getAllInfo" resultMap="userMap">
        <include refid="getAllIncludeFollow"/>
    </select>

    <!--
    按照用户编号id查询信息包括收藏列表
    User getAllInfoById(Integer id);
    -->
    <select id="getAllInfo" parameterType="int" resultMap="userMap">
        <include refid="getAllIncludeFollow"/>
        where u.id=#{id}
    </select>


    <!--
    查询所有用户个人信息
    List<User> getAll();
    -->
    <select id="getAll" resultType="user">
        select id, email, image_url, user_name, institution, password
        from user
    </select>

    <!--
    按照email查询用户信息
    User getByEmail(String email);
    -->
    <select id="getByEmail" parameterType="string" resultType="user">
        select id, email, image_url, user_name, institution, password
        from user
        where email=#{email}
    </select>

    <!--
    按照user_name查询用户信息
    List<User> getByUserName(String userName);
    -->
    <select id="getByUserName" parameterType="string" resultType="user">
        select id, email, image_url, user_name, institution, password
        from user
        where user_name like '%${userName}%'
    </select>

    <!--
    增加用户
    int insert(User user);
    PS: 插入占位取实体类的名称
    -->
    <insert id="insert" parameterType="user">
        insert into user (email, image_url, user_name, institution, password) values (
        <if test="email != null and email != ''">#{email},</if>
        <if test="imageUrl != null and imageUrl != ''">#{imageUrl},</if>
        <if test="userName != null and userName != ''">#{userName},</if>
        <if test="institution != null and institution != ''">#{institution},</if>
        <if test="password != null and password != ''">#{password}</if>
        )
    </insert>

    <!--
    删除用户
    int delete(Integer id);
    -->
    <delete id="delete" parameterType="int">
        delete from user
        where id=#{id}
    </delete>

    <!--
    更新用户信息
    int update(User user);
    -->
    <update id="update" parameterType="user">
        update user set image_url=#{imageUrl}, user_name=#{userName}, institution=#{institution}, password=#{password}
        where email=#{email}
    </update>

    <!--
    更新用户密码
    int updatePassword(Map params);
    Map封装email和password
    -->
    <update id="updatePassword">
        update user set password=#{password}
        where email=#{email}
    </update>

</mapper>